name: RustDesk RDP Setup

on:
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: windows-latest
    timeout-minutes: 360  # 6 hours max (GitHub limit)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 1. Install RustDesk
    - name: Install RustDesk
      run: |
        # Download portable version (no admin needed)
        $rustdeskUrl = "https://github.com/rustdesk/rustdesk/releases/download/1.2.3/rustdesk-1.2.3-windows_x64.zip"
        Invoke-WebRequest -Uri $rustdeskUrl -OutFile "$env:RUNNER_TEMP\rustdesk.zip"
        
        # Extract and prepare
        Expand-Archive -Path "$env:RUNNER_TEMP\rustdesk.zip" -DestinationPath "$env:RUNNER_TEMP\rustdesk"
        $rustdeskExe = Get-ChildItem "$env:RUNNER_TEMP\rustdesk\" -Filter "rustdesk.exe" -Recurse | Select-Object -First 1

    # 2. Enable RDP (for fallback)
    - name: Configure Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "RustDeskRDP@123" -Force)

    # 3. Start RustDesk and get credentials
    - name: Start RustDesk and Get ID/Password
      run: |
        # Start RustDesk in background
        Start-Process -FilePath "$env:RUNNER_TEMP\rustdesk\$($rustdeskExe.Name)" -ArgumentList "--server" -WindowStyle Hidden
        
        # Wait for initialization
        Start-Sleep -Seconds 30
        
        # Get RustDesk ID (from config file)
        $configPath = "$env:APPDATA\RustDesk\config\RustDesk.toml"
        $rustdeskId = (Get-Content $configPath | Select-String "id = ").Line.Split('"')[1]
        
        # Get temporary password (changes on each start)
        $rustdeskPass = (Get-Process -Name "rustdesk" -ErrorAction SilentlyContinue).MainWindowTitle -replace ".*Password: ",""
        
        # Store credentials (masked in logs)
        echo "::add-mask::$rustdeskId"
        echo "::add-mask::$rustdeskPass"
        echo "RUSTDESK_ID=$rustdeskId" >> $env:GITHUB_ENV
        echo "RUSTDESK_PASS=$rustdeskPass" >> $env:GITHUB_ENV

    # 4. Output connection info
    - name: Display Connection Details
      run: |
        Write-Host "======================================"
        Write-Host "RustDesk Connection Details:"
        Write-Host "ID: $env:RUSTDESK_ID"
        Write-Host "Password: $env:RUSTDESK_PASS"
        Write-Host "======================================"

    # 5. Keep alive (max 6 hours)
    - name: Maintain Connection
      run: |
        # Combine RDP and RustDesk keep-alive
        while ($true) {
          Write-Host "RDP/RustDesk active - $(Get-Date)"
          Start-Sleep -Seconds 300  # Prevent timeout
        }
